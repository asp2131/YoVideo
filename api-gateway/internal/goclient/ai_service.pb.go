// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: ai_service.proto

package aiservice

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TranscriptSegment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Text          string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	StartTime     float64                `protobuf:"fixed64,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       float64                `protobuf:"fixed64,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TranscriptSegment) Reset() {
	*x = TranscriptSegment{}
	mi := &file_ai_service_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TranscriptSegment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranscriptSegment) ProtoMessage() {}

func (x *TranscriptSegment) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranscriptSegment.ProtoReflect.Descriptor instead.
func (*TranscriptSegment) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{0}
}

func (x *TranscriptSegment) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *TranscriptSegment) GetStartTime() float64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *TranscriptSegment) GetEndTime() float64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type TranscribeAudioRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	AudioData        []byte                 `protobuf:"bytes,1,opt,name=audio_data,json=audioData,proto3" json:"audio_data,omitempty"`                      // Raw audio bytes
	OriginalFilename string                 `protobuf:"bytes,2,opt,name=original_filename,json=originalFilename,proto3" json:"original_filename,omitempty"` // e.g., "test.mp3"
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TranscribeAudioRequest) Reset() {
	*x = TranscribeAudioRequest{}
	mi := &file_ai_service_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TranscribeAudioRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranscribeAudioRequest) ProtoMessage() {}

func (x *TranscribeAudioRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranscribeAudioRequest.ProtoReflect.Descriptor instead.
func (*TranscribeAudioRequest) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{1}
}

func (x *TranscribeAudioRequest) GetAudioData() []byte {
	if x != nil {
		return x.AudioData
	}
	return nil
}

func (x *TranscribeAudioRequest) GetOriginalFilename() string {
	if x != nil {
		return x.OriginalFilename
	}
	return ""
}

type TranscribeAudioResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Segments      []*TranscriptSegment   `protobuf:"bytes,2,rep,name=segments,proto3" json:"segments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TranscribeAudioResponse) Reset() {
	*x = TranscribeAudioResponse{}
	mi := &file_ai_service_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TranscribeAudioResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranscribeAudioResponse) ProtoMessage() {}

func (x *TranscribeAudioResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranscribeAudioResponse.ProtoReflect.Descriptor instead.
func (*TranscribeAudioResponse) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{2}
}

func (x *TranscribeAudioResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *TranscribeAudioResponse) GetSegments() []*TranscriptSegment {
	if x != nil {
		return x.Segments
	}
	return nil
}

type FormatCaptionsRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Segments           []*TranscriptSegment   `protobuf:"bytes,1,rep,name=segments,proto3" json:"segments,omitempty"`
	MaxCharsPerLine    int32                  `protobuf:"varint,2,opt,name=max_chars_per_line,json=maxCharsPerLine,proto3" json:"max_chars_per_line,omitempty"`
	MaxLinesPerCaption int32                  `protobuf:"varint,3,opt,name=max_lines_per_caption,json=maxLinesPerCaption,proto3" json:"max_lines_per_caption,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *FormatCaptionsRequest) Reset() {
	*x = FormatCaptionsRequest{}
	mi := &file_ai_service_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FormatCaptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormatCaptionsRequest) ProtoMessage() {}

func (x *FormatCaptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormatCaptionsRequest.ProtoReflect.Descriptor instead.
func (*FormatCaptionsRequest) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{3}
}

func (x *FormatCaptionsRequest) GetSegments() []*TranscriptSegment {
	if x != nil {
		return x.Segments
	}
	return nil
}

func (x *FormatCaptionsRequest) GetMaxCharsPerLine() int32 {
	if x != nil {
		return x.MaxCharsPerLine
	}
	return 0
}

func (x *FormatCaptionsRequest) GetMaxLinesPerCaption() int32 {
	if x != nil {
		return x.MaxLinesPerCaption
	}
	return 0
}

type FormatCaptionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SrtContent    string                 `protobuf:"bytes,1,opt,name=srt_content,json=srtContent,proto3" json:"srt_content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FormatCaptionsResponse) Reset() {
	*x = FormatCaptionsResponse{}
	mi := &file_ai_service_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FormatCaptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormatCaptionsResponse) ProtoMessage() {}

func (x *FormatCaptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ai_service_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormatCaptionsResponse.ProtoReflect.Descriptor instead.
func (*FormatCaptionsResponse) Descriptor() ([]byte, []int) {
	return file_ai_service_proto_rawDescGZIP(), []int{4}
}

func (x *FormatCaptionsResponse) GetSrtContent() string {
	if x != nil {
		return x.SrtContent
	}
	return ""
}

var File_ai_service_proto protoreflect.FileDescriptor

const file_ai_service_proto_rawDesc = "" +
	"\n" +
	"\x10ai_service.proto\x12\taiservice\"a\n" +
	"\x11TranscriptSegment\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\x12\x1d\n" +
	"\n" +
	"start_time\x18\x02 \x01(\x01R\tstartTime\x12\x19\n" +
	"\bend_time\x18\x03 \x01(\x01R\aendTime\"d\n" +
	"\x16TranscribeAudioRequest\x12\x1d\n" +
	"\n" +
	"audio_data\x18\x01 \x01(\fR\taudioData\x12+\n" +
	"\x11original_filename\x18\x02 \x01(\tR\x10originalFilename\"o\n" +
	"\x17TranscribeAudioResponse\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x128\n" +
	"\bsegments\x18\x02 \x03(\v2\x1c.aiservice.TranscriptSegmentR\bsegments\"\xb1\x01\n" +
	"\x15FormatCaptionsRequest\x128\n" +
	"\bsegments\x18\x01 \x03(\v2\x1c.aiservice.TranscriptSegmentR\bsegments\x12+\n" +
	"\x12max_chars_per_line\x18\x02 \x01(\x05R\x0fmaxCharsPerLine\x121\n" +
	"\x15max_lines_per_caption\x18\x03 \x01(\x05R\x12maxLinesPerCaption\"9\n" +
	"\x16FormatCaptionsResponse\x12\x1f\n" +
	"\vsrt_content\x18\x01 \x01(\tR\n" +
	"srtContent2\xbc\x01\n" +
	"\tAIService\x12X\n" +
	"\x0fTranscribeAudio\x12!.aiservice.TranscribeAudioRequest\x1a\".aiservice.TranscribeAudioResponse\x12U\n" +
	"\x0eFormatCaptions\x12 .aiservice.FormatCaptionsRequest\x1a!.aiservice.FormatCaptionsResponseB5Z3videothingy/api-gateway/internal/goclient/aiserviceb\x06proto3"

var (
	file_ai_service_proto_rawDescOnce sync.Once
	file_ai_service_proto_rawDescData []byte
)

func file_ai_service_proto_rawDescGZIP() []byte {
	file_ai_service_proto_rawDescOnce.Do(func() {
		file_ai_service_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ai_service_proto_rawDesc), len(file_ai_service_proto_rawDesc)))
	})
	return file_ai_service_proto_rawDescData
}

var file_ai_service_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_ai_service_proto_goTypes = []any{
	(*TranscriptSegment)(nil),       // 0: aiservice.TranscriptSegment
	(*TranscribeAudioRequest)(nil),  // 1: aiservice.TranscribeAudioRequest
	(*TranscribeAudioResponse)(nil), // 2: aiservice.TranscribeAudioResponse
	(*FormatCaptionsRequest)(nil),   // 3: aiservice.FormatCaptionsRequest
	(*FormatCaptionsResponse)(nil),  // 4: aiservice.FormatCaptionsResponse
}
var file_ai_service_proto_depIdxs = []int32{
	0, // 0: aiservice.TranscribeAudioResponse.segments:type_name -> aiservice.TranscriptSegment
	0, // 1: aiservice.FormatCaptionsRequest.segments:type_name -> aiservice.TranscriptSegment
	1, // 2: aiservice.AIService.TranscribeAudio:input_type -> aiservice.TranscribeAudioRequest
	3, // 3: aiservice.AIService.FormatCaptions:input_type -> aiservice.FormatCaptionsRequest
	2, // 4: aiservice.AIService.TranscribeAudio:output_type -> aiservice.TranscribeAudioResponse
	4, // 5: aiservice.AIService.FormatCaptions:output_type -> aiservice.FormatCaptionsResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_ai_service_proto_init() }
func file_ai_service_proto_init() {
	if File_ai_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ai_service_proto_rawDesc), len(file_ai_service_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ai_service_proto_goTypes,
		DependencyIndexes: file_ai_service_proto_depIdxs,
		MessageInfos:      file_ai_service_proto_msgTypes,
	}.Build()
	File_ai_service_proto = out.File
	file_ai_service_proto_goTypes = nil
	file_ai_service_proto_depIdxs = nil
}
